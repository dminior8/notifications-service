services:
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # RabbitMQ default port
      - "15672:15672" # RabbitMQ management plugin (web UI)
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

  producer-service:
    build:
      context: .
    image: producer-service
    container_name: producer-service
    ports:
      - "8083:8080"
    depends_on:
      - mongo
      - rabbitmq
    networks:
      - app-network

# Sieć, która łączy usługi
networks:
  app-network:
    driver: bridge

# Volumes do MongoDB - wolumeny zapobiegają usunieciu danych gdy kontener usuwany/zatrzymywany
volumes:
  mongo-data:

